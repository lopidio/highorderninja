http://www.learn-cocos2d.com/2013/08/physics-engine-platformer-terrible-idea/
http://higherorderfun.com/blog/2012/05/20/the-guide-to-implementing-2d-platformers/
http://download.eclipse.org/tools/cdt/releases/8.8

class GameMachine

class GameStateMachine

class GameObject
	-isAlive
	-updater
	-collider
	+load()
	+update()
	+draw()
	+unload()

class GroundObject extends GameObject
	
class GameItem extends GameObject (Visitor+Decorator)
	-gameItem
	-execute(GameHero)

class Projectile extends GameObject
class Shuriken extends Projetile
class HeroTrackerProjectile extends Projetile
...
	
class GameObstacles extends GameObject

class GameHero extends GameObject
	-playerId
	-Color
	-controller
	-heroState
	+handleInput(Input input)
	+setState(HeroState)
	-setItem(GameItem)
	
class HeroState
	-previousState
	-maxSpeed
	-canShoot
	-canUseRope
	-duration
	-animation
	-entry()
	+handleInput(GameHero, Input input)
	+updateHero(GameHero, updateTime): HeroState

class HeroOnGroundState
class HeroOnAirState
class HeroOnRopeState
class HeroOnWallState
class HeroOnAcrobacyState
	
interface Updatable
	+update(deltaTime)
	
interface Drawable
	+getImage(): Image
	
interface Image
	+draw()
	
class SFMLImage extends SFMLSprite implements Image
	
class AnimationFile (Value Object)
	animationImageName, width, height, numberOfFrames, loop, pingPong
	
abstract class Animation(SFML) extends Drawable implements Updatable
	-animationFile
	-loadFromFile (XML)
	
abstract class Moveable implements Updatable
	-accel
	-maxSpeed
	There’s got to be a speed limit on everything: There is and it’s modifiable in b2Settings
	-adjustSpritePosition()
	
abstract class Collidable
	http://www.aurelienribon.com/blog/2011/07/box2d-tutorial-collision-filtering/
	-collisionMask
	-Type
	-Body
	+handleCollision(Collidable)

class TimeMaster
	+factor
	
class GrapphicsWorld
	+SCALE
	+transformToWorldPosition(Vec2):Vec2
	+transformToGraphicPosition(Vec2):Vec2

class AudioService


AnimationResourceManager
	-animationProperties 
	-getAnimation(String):Animation
