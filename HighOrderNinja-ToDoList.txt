High Order Ninja - To Do List

v	Refactor of playerInput
v	Refactor of player's actions (Command pattern). Queue of commands to execute
v	GameObject ser composta de um collidable
v	Cada ação do player vai herdar de GameHeroAction (moveLeft, moveRight, jump, diagonalJump, ropeSwing, ...)
v	GameHero possuir uma fila (actionQueue) de ações para executar
v	GameHero possuir uma animation
v	Repositories renamed as Pools
v	Jump becomes action
v	SetState becomes action
v	setHeroOrientation becomes action
v	Projectiles shall have damage as property
v	Unify GameHero and GameHeroLogic
v	CollidableFilterBox2DAdapter
v	CollidableManipulator
v	GameHero receives input handler
v	Projectile aimer refactoring (bug fixing). It aims even when there is a obstacle among

-	NinjaRope
	v After hook attachement
	- Before hook attachement
	- Shuriken cuts the rope
v GameObject has list of collidables and drawables (CompositorDrawable?)(CompositorCollidable?)
v Jump becomes action
v SetState becomes action
v setHeroOrientation becomes action
v Projectiles shall have damage as property
v Unify GameHero and GameHeroLogic
v CollidableFilterBox2DAdapter
v CollidableManipulator
v GameHero receives input handler
v NinjaRope
v Refactor of CollidersFilters
v Get category from filter (enumeration)
v Projectile aimer refactoring (bug fixing). It aims even when there is a obstacle among
v GameObject has list of collidables and drawables (CompositorDrawable?)(CompositorCollidable?)
v Aimer aims worse when target is inside a smokebomb area
v GameHero receives GameHeroProperties(?) {Color, input, ID, initial position...} at constructor
v SmokeBomb (player colloring)
v Team class (Color, playersMask, enemiesMask, numPlayers, totalPoints, gameHeroPropertiesList)
v Get category from filter (one enumeration)
v Scenery (http://www.jsonschema2pojo.org/) (http://akinuri.deviantart.com/art/Metal-Textures-221702846)(http://miss-marlies.deviantart.com/art/Textures-dirt-grass-sand-and-water-335479475)
v DynamicBackground
v GameItem
v Airspin/SuperRunning herostate.xml conditions to enter
v GameItemController (manages item creations)

ShurikenBomb
RayCastAnythingBut....

MatchProperties (given to MainGameStateConstructos. Has: deathmatch or teammatch, numMaxShurikens, maxTime, itemsAvailable, friendlyFire, scene, goalScore...)
Every GameHero object instantiates it's own frag statistics... At the end of each round, that fragStatistics is read by the team...
FragStatistics: totalShoots, deaths, kills, suicides

?? StateFile refactoring (enable and disable animations at runtime) AnimationFile refactoring
?? SmokeBomb refactoring (real particles system)

Think about what to do: action+wallgrab; action+ducking
Background refactoring (to use AnimationCentralPool)(to have Foreground objects)(regenerateInterval...)
Scenery handle deadly obstacles




